{"version":3,"sources":["Loader/Loader.js","Table/Table.js","Card-Details/DetailsTable.js","Header/Header.js","IncomeModal/Income.js","New-Payment-Modal/NewPaymentModal.js","App.js","serviceWorker.js","index.js"],"names":["className","props","onClick","onSort","bind","data","map","item","key","cardNumber","balance","expense","name","type","checked","block","onRowSelect","date","number","cost","description","style","height","background","href","openIncome","newPayment","cardsList","class","role","id","closeModal","aria-label","aria-hidden","data-toggle","aria-haspopup","aria-expanded","card","aria-labelledby","setCardNumber","onChange","setValue","setDescription","aria-describedby","App","state","isLoading","sort","sortField","row","newPaymentModalOn","incomeModalOn","selectedCardNumber","costValue","cmp","cloneData","concat","sortType","orderedData","orderBy","setState","target","value","payments","console","log","this","component","Table","Income","Header","Fragment","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.30b07a29.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loader.css';\r\n\r\nexport default () => <div className=\"lds-spinner\">\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n\t<div></div>\r\n</div>","import React from 'react';\r\n\r\nexport default props => (\r\n<table className=\"table\">\r\n\t<thead>\r\n\t<tr>\r\n\t\t<th onClick={props.onSort.bind(null, 'cardNumber')}>cardNumber</th>\r\n\t\t<th onClick={props.onSort.bind(null, 'balance')}>balance</th>\r\n\t\t<th onClick={props.onSort.bind(null, 'expense')}>expense</th>\r\n\t\t<th onClick={props.onSort.bind(null, 'block')}>block</th>\r\n\t\t<th>History</th>\r\n\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t{ props.data.map(item =>(\r\n\t\t<tr key={item.cardNumber}>\r\n\t\t\t<td >{item.cardNumber}</td>\r\n\t\t\t<td>{item.balance}</td>\r\n\t\t\t<td>{item.expense}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"block\"\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tchecked={item.block}/>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-info\"\r\n\t\t\t\t\tonClick={props.onRowSelect.bind(null, item)}>\r\n\t\t\t\t\tHistory\r\n\t\t\t\t</button>\r\n\r\n\t\t\t{/*TODO: create icon!*/}\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t))}\r\n\t</tbody>\r\n</table>\r\n)","import React from 'react';\r\n\r\nexport default props => (\r\n\t<table className=\"table\">\r\n\t\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th onClick={props.onSort.bind(null, 'date')}>Date</th>\r\n\t\t\t<th onClick={props.onSort.bind(null, 'number')}>Payment Number</th>\r\n\t\t\t<th onClick={props.onSort.bind(null, 'cost')}>Cost</th>\r\n\t\t\t<th onClick={props.onSort.bind(null, 'description')}>Description</th>\r\n\t\t\t<th>Edit Description</th>\r\n\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody>\r\n\t\t{props.data.map(item => (\r\n\t\t\t<tr key={item.date}>\r\n\t\t\t\t<td>{item.date}</td>\r\n\t\t\t\t<td>{item.number}</td>\r\n\t\t\t\t<td>{item.cost}</td>\r\n\t\t\t\t<td>{item.description}</td>\r\n\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-info\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tEdit\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{/*TODO: create icon!*/}\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t))}\r\n\t\t</tbody>\r\n\t</table>\r\n)","import React from 'react';\r\n\r\nexport default props => (\r\n\r\n\t<nav className=\"d-flex navbar navbar-expand-lg navbar-light justify-content-between flex-nowrap\"\r\n\t\tstyle={{\r\n\t\t\theight: '15vh',\r\n\t\t\tbackground: '#bfdffd'\r\n\t\t}}\r\n\t>\r\n\t\t<a className=\"navbar-brand\" href=\"#\">Welcome Dear Customer</a>\r\n\r\n\t\t<div>\r\n\t\t\t<button\r\n\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"btn btn-secondary mr-3 \"\r\n\t\t\t\tonClick={props.openIncome.bind(null)}\r\n\t\t\t>\r\n\t\t\t\tIncome\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"btn btn-success mr-3\"\r\n\t\t\t\tonClick={props.newPayment.bind(null)}\r\n\t\t\t>\r\n\r\n\t\t\t\tNew Payment\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"btn btn-warning mr-3\"\r\n\t\t\t\tonClick={props.cardsList.bind(null)}\r\n\t\t\t>\r\n\t\t\t\tCards List\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"btn btn-outline-danger mr-3\"\r\n\t\t\t>\r\n\t\t\t\tLogout\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\r\n\t</nav>\r\n\r\n)","import React from 'react';\r\n//<!--TODO add querry(post) to save changes. All values in state.-->\r\nexport default props => (\r\n\r\n\t<div class=\"modal-dialog\" role=\"document\">\r\n\t\t<div class=\"modal-content\">\r\n\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t<h5 class=\"modal-title\" id=\"exampleModalLabel\">New Income</h5>\r\n\t\t\t\t<button type=\"button\" class=\"close\" onClick={props.closeModal.bind(null)} aria-label=\"Close\">\r\n\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"modal-body d-flex\">\r\n\t\t\t\t<div className=\"dropdown open pr-5\">\r\n\t\t\t\t\t<button className=\"btn btn-secondary dropdown-toggle\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tid=\"dropdownMenuButton\"\r\n\t\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.card}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t{props.data.map(item => (\r\n\t\t\t\t\t\t\t<button className=\"dropdown-item\"\r\n\t\t\t\t\t\t\t\tonClick={props.setCardNumber.bind(null, item.cardNumber)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{item.cardNumber}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"input-group mb-3\">\r\n\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t<span className=\"input-group-text\">$</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<input type=\"number\"\r\n\t\t\t\t\t\t\tonChange={props.setValue}\r\n\t\t\t\t\t\t\tclassName=\"form-control\" aria-label=\"Amount\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t<span className=\"input-group-text\">.00</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" onClick={props.closeModal.bind(null)}>Close</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n)","import React from 'react';\r\n//<!--TODO add querry(post) to save changes. All values in state.-->\r\nexport default props => (\r\n\r\n\t<div class=\"modal-dialog\" role=\"document\">\r\n\t\t<div class=\"modal-content\">\r\n\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t<h5 class=\"modal-title\" id=\"exampleModalLabel\">New Payment</h5>\r\n\t\t\t\t<button type=\"button\" class=\"close\" onClick={props.closeModal.bind(null)} aria-label=\"Close\">\r\n\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal-body d-flex flex-column\">\r\n\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t<div className=\"dropdown open pr-5\">\r\n\t\t\t\t\t\t<button className=\"btn btn-secondary dropdown-toggle\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tid=\"dropdownMenuButton\"\r\n\t\t\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{props.card}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t\t{props.data.map(item => (\r\n\t\t\t\t\t\t\t\t<button className=\"dropdown-item\"\r\n\t\t\t\t\t\t\t\t\tonClick={props.setCardNumber.bind(null, item.cardNumber)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{item.cardNumber}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-group mb-3\">\r\n\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span className=\"input-group-text\">$</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<input type=\"number\"\r\n\t\t\t\t\t\t\t\tonChange={props.setValue}\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\" aria-label=\"Amount\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t\t<span className=\"input-group-text\">.00</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className=\"input-group mb-3\">\r\n\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t<span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Description</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\tonChange={props.setDescription}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\taria-label=\"Default\"\r\n\t\t\t\t\t\taria-describedby=\"inputGroup-sizing-default\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" onClick={props.closeModal.bind(null)}>Close</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n)","import React, {Component} from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport sort from 'lodash';\nimport PaymentTable from './Card-Details/DetailsTable';\nimport Header from './Header/Header';\nimport Income from './IncomeModal/Income';\nimport Payment from './New-Payment-Modal/NewPaymentModal';\n\n\n//TODO after server-side:\n//TODO fetch to save btn-s\n//TODO onclick to block and rename table headers\n//TODO authorisation ??\n//TODO sort-direction icon??\n\nclass App extends Component {\n\n\tstate = {\n\t\tisLoading: true,\n\t\tdata: [],\n\t\tsort: 'asc', //def\n\t\tsortField: 'id',//def\n\t\trow: null, //selected card, null case - all cards list\n\t\tnewPaymentModalOn: false,\n\t\tincomeModalOn: false,\n\t\tselectedCardNumber: 'Select Card!',\n\t\tcostValue: 0,\n\t\tdescription: '',\n\t\tcmp : 'Loader'\n\t};\n\n\t//after load DOM\n\tasync componentDidMount() {\n\t\t//add get (Mock for test?? mb)\n\t\t//const response = await fetch(``);\n\t\t//const data = await response.json();\n\t\t//cardnumber - regexp\n\t\tconst data = [\n\t\t\t{\n\t\t\t\tcardNumber: 'visa-4444', balance: 1, expense: 2, block: false,\n\t\t\t\tpayments: [\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardNumber: 'visa-4443', balance: 2, expense: 12, block: false,\n\t\t\t\tpayments: [\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardNumber: 'visa-4442', balance: 3, expense: 22, block: true,\n\t\t\t\tpayments: [\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardNumber: ' visa-4441', balance: 4, expense: 32, block: false,\n\t\t\t\tpayments: [\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardNumber: 'visa-4445', balance: 6, expense: 42, block: true,\n\t\t\t\tpayments: [\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardNumber: 'visa-4447', balance: 7, expense: 52, block: true,\n\t\t\t\tpayments: [\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardNumber: 'visa-4449', balance: 9, expense: 62, block: false,\n\t\t\t\tpayments: [\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'},\n\t\t\t\t\t{date: '12-06-2019', number: 12, cost: 5, description: 'Phone'}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\n\t\tconsole.log(data);\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tdata: data,\n\t\t\tsort: 'asc',  // 'desc'\n\t\t\tsortField: 'id',\n\t\t\tcmp: 'allCardsTable'\n\t\t});\n\t}\n\n\tonSort = sortField => {\n\t\tconst cloneData = this.state.data.concat(); // save state.data\n\t\tconst sortType = this.state.sort === 'asc' ? 'desc' : 'asc'; // generate type\n\t\tconst orderedData = sort.orderBy(cloneData, sortField, sortType); // generate data\n\n\t\tthis.setState({\n\t\t\tdata: orderedData,\n\t\t\tsort: sortType,\n\t\t\tsortField\n\t\t});\n\n\n\t};\n\n\tonRowSelect = row => (\n\t\tthis.setState({row: row, cmp:'selectedCardHistory'})\n\t);\n\tcardsList = row => (\n\t\tthis.setState({row: null, cmp:'allCardsTable'})\n\t);\n\topenIncome = incomeModalOn => (\n\t\tthis.setState({incomeModalOn: true, cmp:'openIncomeWindow'})\n\t);\n\tcloseModal = incomeModalOn => (\n\t\tthis.setState({incomeModalOn: false, cmp:'allCardsTable'})\n\t);\n\tsetCardNumber = selectedCardNumber => {\n\t\tthis.setState({selectedCardNumber});\n\t};\n\tsetValue = costValue => {\n\t\tthis.setState({costValue: costValue.target.value});\n\t};\n\tsetDescription= description => {\n\t\tthis.setState({description: description.target.value});\n\t};\n\tnewPayment=()=>(\n\t\tthis.setState({newPaymentModalOn: true, cmp:'openPaymentWindow'})\n\t)\n\trender() {\n\t\tlet component = null;\n\n\t\tswitch (this.state.cmp){\n\t\t\tcase 'Loader':\n\t\t\t\tcomponent = <Loader/> //data loading case\n\t\t\t\tbreak;\n\t\t\tcase 'allCardsTable':\n\t\t\t\tcomponent = <Table //data load case\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tsort={this.state.sort} //auto sort\n\t\t\t\t\tsortField={this.state.sortField} // sort field\n\t\t\t\t\tonSort={this.onSort} // sort (ASK MENTOR! without rest)\n\t\t\t\t\tonRowSelect={this.onRowSelect} //info about card payment\n\t\t\t\t/>\n\t\t\t\tbreak;\n\t\t\tcase 'selectedCardHistory':\n\t\t\t\tcomponent = <PaymentTable\n\t\t\t\t\tdata={this.state.row.payments}\n\t\t\t\t\tsort={this.state.sort} //auto sort\n\t\t\t\t\tsortField={this.state.sortField} // sort field\n\t\t\t\t\tonSort={this.onSort} // sort (ASK MENTOR! without rest)\n\t\t\t\t\tonRowSelect={this.onRowSelect} //info about card payment\n\t\t\t\t/>\n\t\t\t\tbreak;\n\t\t\tcase 'openIncomeWindow':\n\t\t\t\tcomponent = <Income\n\t\t\t\t\tcloseModal={this.closeModal}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tcard={this.state.selectedCardNumber}\n\t\t\t\t\tcostValue={this.state.costValue}\n\t\t\t\t\tsetCardNumber={this.setCardNumber}\n\t\t\t\t\tsetValue={this.setValue}\n\t\t\t\t/>\n\t\t\t\tbreak;\n\t\t\tcase 'openPaymentWindow':\n\t\t\t\tcomponent = <Payment\n\t\t\t\t\tcloseModal={this.closeModal}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tcard={this.state.selectedCardNumber}\n\t\t\t\t\tcostValue={this.state.costValue}\n\t\t\t\t\tsetCardNumber={this.setCardNumber}\n\t\t\t\t\tsetValue={this.setValue}\n\t\t\t\t\tsetDescription={this.setDescription}\n\t\t\t\t/>\n\t\t\t\tbreak;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"container\">\n\n\t\t\t\t<Header\n\t\t\t\t\tcardsList={this.cardsList}\n\t\t\t\t\topenIncome={this.openIncome}\n\t\t\t\t\tnewPayment = {this.newPayment}\n\t\t\t\t/>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{component}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\n\t\t\t</div>\n\n\t\t);\n\t}\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}